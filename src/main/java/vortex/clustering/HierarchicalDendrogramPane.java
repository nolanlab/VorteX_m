/*
 * Copyright (C) 2015 Nikolay
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package vortex.clustering;

import clustering.ClusterSet;

/**
 *
 * @author Nikolay
 */
public class HierarchicalDendrogramPane extends javax.swing.JPanel {
HierarchicalDendrogramRenderer dnd;
    /**
     * Creates new form HierarchicalDendrogramPane
     */
    public HierarchicalDendrogramPane() {
        initComponents();
        dnd = new HierarchicalDendrogramRenderer();
        
        jPanel1.add(dnd);
    }

    public void setDendrogram(HierarchicalClusterTree dg) {
        dnd.setDendrogram(dg);
    }
    
   public  ClusterSet[] getClusterSets(){
       return dnd.getClusterSets();
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmdCut = new samusik.glasscmp.GlassButton();
        cmdZoomPlus = new javax.swing.JButton();
        CmdZoomMinus = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();

        org.openide.awt.Mnemonics.setLocalizedText(cmdCut, org.openide.util.NbBundle.getMessage(HierarchicalDendrogramPane.class, "HierarchicalDendrogramPane.cmdCut.text")); // NOI18N
        cmdCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCutActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(cmdZoomPlus, org.openide.util.NbBundle.getMessage(HierarchicalDendrogramPane.class, "HierarchicalDendrogramPane.cmdZoomPlus.text")); // NOI18N
        cmdZoomPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdZoomPlusActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(CmdZoomMinus, org.openide.util.NbBundle.getMessage(HierarchicalDendrogramPane.class, "HierarchicalDendrogramPane.CmdZoomMinus.text")); // NOI18N
        CmdZoomMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdZoomMinusActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, org.openide.util.NbBundle.getMessage(HierarchicalDendrogramPane.class, "HierarchicalDendrogramPane.jCheckBox1.text")); // NOI18N
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cmdCut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdZoomPlus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmdZoomMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addContainerGap(396, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdCut, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdZoomPlus)
                    .addComponent(CmdZoomMinus)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmdCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCutActionPerformed
        dnd.cutDendrogram();
    }//GEN-LAST:event_cmdCutActionPerformed

    private void cmdZoomPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdZoomPlusActionPerformed
       dnd.setRowHeight((int)(dnd.getRowHeight() +1));
    }//GEN-LAST:event_cmdZoomPlusActionPerformed

    private void CmdZoomMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdZoomMinusActionPerformed
        dnd.setRowHeight(Math.max(1, (int)(dnd.getRowHeight() -1)));
    }//GEN-LAST:event_CmdZoomMinusActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
       dnd.setRainbowRows(jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CmdZoomMinus;
    private samusik.glasscmp.GlassButton cmdCut;
    private javax.swing.JButton cmdZoomPlus;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
