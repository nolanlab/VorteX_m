/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * KMeansParamPanel.java
 *
 * Created on 01-Dec-2009, 22:57:50
 */
package vortex.clustering;

import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Nikolay
 */
public class FullVTParamPanel extends javax.swing.JPanel {

    /**
     * Creates new form KMeansParamPanel
     */
    public FullVTParamPanel() {
        initComponents();
    }

    public int[] getCentRounds() {

        int from = (Integer) ((SpinnerNumberModel) spinFKFrom.getModel()).getNumber();
        int to = (Integer) ((SpinnerNumberModel) spinFKTo.getModel()).getNumber();
        int[] out = new int[(to - from) + 1];
        for (int i = from; i <= to; i++) {
            out[i - from] = i;
        }
        return out;
    }

    public int getMinPointNumber() {
        return (Integer) ((SpinnerNumberModel) spinMinPointNum.getModel()).getNumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        spinFKFrom = new javax.swing.JSpinner();
        spinFKTo = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        spinMinPointNum = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(300, 90));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(300, 90));
        setLayout(new java.awt.GridBagLayout());

        spinFKFrom.setModel(new javax.swing.SpinnerNumberModel());
        spinFKFrom.setMaximumSize(new java.awt.Dimension(60, 25));
        spinFKFrom.setMinimumSize(new java.awt.Dimension(60, 25));
        spinFKFrom.setPreferredSize(new java.awt.Dimension(60, 25));
        ((SpinnerNumberModel)spinFKFrom.getModel()).setMaximum((Integer)spinFKTo.getValue());
        spinFKFrom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFKFromStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        add(spinFKFrom, gridBagConstraints);

        spinFKTo.setModel(new javax.swing.SpinnerNumberModel());
        spinFKTo.setMaximumSize(new java.awt.Dimension(60, 25));
        spinFKTo.setMinimumSize(new java.awt.Dimension(60, 25));
        spinFKTo.setPreferredSize(new java.awt.Dimension(60, 25));
        ((SpinnerNumberModel)spinFKTo.getModel()).setMinimum((Integer)spinFKFrom.getValue());
        spinFKTo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFKToStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(spinFKTo, gridBagConstraints);

        jLabel11.setForeground(new java.awt.Color(0, 51, 102));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Min point number");
        jLabel11.setMaximumSize(new java.awt.Dimension(85, 14));
        jLabel11.setMinimumSize(new java.awt.Dimension(85, 14));
        jLabel11.setPreferredSize(new java.awt.Dimension(85, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel11, gridBagConstraints);

        jLabel7.setForeground(new java.awt.Color(0, 51, 102));
        jLabel7.setText("From");
        jLabel7.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel7.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabel7.setPreferredSize(new java.awt.Dimension(60, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 2, 0);
        add(jLabel7, gridBagConstraints);

        jLabel8.setForeground(new java.awt.Color(0, 51, 102));
        jLabel8.setText("To");
        jLabel8.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel8.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabel8.setPreferredSize(new java.awt.Dimension(60, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 2, 0);
        add(jLabel8, gridBagConstraints);

        spinMinPointNum.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(0), null, Integer.valueOf(1)));
        spinMinPointNum.setMaximumSize(new java.awt.Dimension(85, 25));
        spinMinPointNum.setMinimumSize(new java.awt.Dimension(85, 25));
        spinMinPointNum.setPreferredSize(new java.awt.Dimension(85, 25));
        ((SpinnerNumberModel)spinFKFrom.getModel()).setMaximum((Integer)spinFKTo.getValue());
        spinMinPointNum.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinMinPointNumStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 5);
        add(spinMinPointNum, gridBagConstraints);

        jLabel12.setForeground(new java.awt.Color(0, 51, 102));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("<html>Cenroidization<br>round</br></html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 1, 4);
        add(jLabel12, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void spinFKFromStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFKFromStateChanged
        // ((SpinnerNumberModel) spinFKTo.getModel()).setMinimum((Integer) spinFKFrom.getValue());
}//GEN-LAST:event_spinFKFromStateChanged

    private void spinFKToStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFKToStateChanged
//        ((SpinnerNumberModel) spinFKFrom.getModel()).setMaximum((Integer) spinFKTo.getValue());
}//GEN-LAST:event_spinFKToStateChanged

    private void spinMinPointNumStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinMinPointNumStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_spinMinPointNumStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSpinner spinFKFrom;
    private javax.swing.JSpinner spinFKTo;
    private javax.swing.JSpinner spinMinPointNum;
    // End of variables declaration//GEN-END:variables
}
